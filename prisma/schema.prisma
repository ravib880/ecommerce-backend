generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model Product {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  price       Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  images      String[] // Array of image URLs
  thumbnail   String? // Thumbnail image URL (optional)
  variations  Variation[]
  tags        Tag[]       @relation("ProductTags")
  categoryId  Int
  category    Category    @relation("ProductCategory", fields: [categoryId], references: [id])
}

model Variation {
  id        Int     @id @default(autoincrement())
  name      String
  price     Float
  stock     Int
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Tag {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  thumbnail   String?
  description String?
  products    Product[] @relation("ProductTags")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  thumbnail   String?
  description String?
  products    Product[] @relation("ProductCategory")
}

model User {
  id           Int         @id @default(autoincrement())
  role         UserRole    @default(USER)
  name         String?
  email        String      @unique
  mobile       String      @unique
  gender       String?
  password     String?
  addressLine1 String?
  addressLine2 String?
  city         String?
  state        String?
  country      String?
  pinCode      String?
  UserToken    UserToken[]
}

model UserToken {
  id     Int    @id @default(autoincrement())
  token  String @db.VarChar(500)
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model ErrorLog {
  id        Int      @id @default(autoincrement())
  message   String
  details   String?
  module    String
  createdAt DateTime @default(now())
}
